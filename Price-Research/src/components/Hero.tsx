import React, { useState } from 'react';

interface PricingData {
  tooCheap: number;
  bargain: number;
  expensive: number;
  tooExpensive: number;
}

interface Results {
  opp: number;
  ipp: number;
  minPrice: number;
  maxPrice: number;
}

type Language = 'en' | 'si' | 'ta';
type Currency = 'LKR' | 'USD' | 'EUR' | 'INR';

interface Translations {
  [key: string]: {
    [key: string]: string;
  };
}

const translations: Translations = {
  en: {
    mainTitle: 'üé¢ Van Westendorp Pricing Research',
    subtitle: 'Discover the perfect price for your product through customer perceptions',
    productTitle: 'üì¶ Product Information',
    questionsTitle: 'üí° The Four Magic Questions',
    q1Title: 'üò¨ Too Cheap - Quality Concerns',
    q1Text: 'At what price would you consider this product to be so cheap that you\'d question its quality?',
    q2Title: 'üõçÔ∏è Great Value - Bargain Price',
    q2Text: 'At what price would you consider this product to be a bargain ‚Äî a great buy for the money?',
    q3Title: 'üí∏ Getting Expensive - But Still Considering',
    q3Text: 'At what price would you begin to think this product is getting expensive, but still worth considering?',
    q4Title: 'üíÄ Too Expensive - Hard No',
    q4Text: 'At what price would you consider this product to be too expensive to buy?',
    calculateBtn: 'üéØ Calculate Optimal Pricing',
    resultsTitle: 'üìä Your Pricing Analysis',
    pricePointsTitle: 'üéØ Key Price Points',
    oppLabel: 'Optimal Price Point (OPP):',
    ippLabel: 'Indifference Price Point (IPP):',
    rangeTitle: 'üìè Acceptable Range',
    minLabel: 'Minimum Price:',
    maxLabel: 'Maximum Price:',
    recommendationsTitle: 'üí° Recommendations',
    footerText: 'Developed by sarath ',
    productNamePlaceholder: 'Enter product name',
    fillAllFields: 'Please fill in all fields'
  },
  si: {
    mainTitle: 'üé¢ ‡∑Ä‡∑ë‡∂±‡∑ä ‡∑Ä‡∑ô‡∑É‡∑ä‡∂ß‡∑ô‡∂±‡∑ä‡∂©‡∑ù‡∂¥‡∑ä ‡∂∏‡∑í‡∂Ω ‡∂ú‡∂´‡∂±‡∑ä ‡∂¥‡∂ª‡∑ä‡∂∫‡∑ö‡∑Ç‡∂´‡∂∫',
    subtitle: '‡∂ú‡∂±‡∑î‡∂Ø‡∑ô‡∂±‡∑î‡∂ö‡∂ª‡∑î‡∑Ä‡∂±‡∑ä‡∂ú‡∑ö ‡∑É‡∂Ç‡∂¢‡∑è‡∂±‡∂± ‡∑Ñ‡∂ª‡∑Ñ‡∑è ‡∂î‡∂∂‡∑ö ‡∂±‡∑í‡∑Ç‡∑ä‡∂¥‡∑è‡∂Ø‡∂±‡∂∫ ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂¥‡∂ª‡∑í‡∂¥‡∑ñ‡∂ª‡∑ä‡∂´ ‡∂∏‡∑í‡∂Ω ‡∑É‡∑ú‡∂∫‡∑è ‡∂ú‡∂±‡∑ä‡∂±',
    productTitle: 'üì¶ ‡∂±‡∑í‡∑Ç‡∑ä‡∂¥‡∑è‡∂Ø‡∂± ‡∂≠‡∑ú‡∂ª‡∂≠‡∑î‡∂ª‡∑î',
    questionsTitle: 'üí° ‡∂∏‡∑ê‡∂¢‡∑í‡∂ö‡∑ä ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∑Ñ‡∂≠‡∂ª',
    q1Title: 'üò¨ ‡∂â‡∂≠‡∑è ‡∂Ö‡∂©‡∑î - ‡∂ú‡∑î‡∂´‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∑É‡∑ê‡∂ö‡∂∫‡∂±‡∑ä',
    q1Text: '‡∂∏‡∑ö ‡∂±‡∑í‡∑Ç‡∑ä‡∂¥‡∑è‡∂Ø‡∂±‡∂∫ ‡∂ö‡∑î‡∂∏‡∂± ‡∂∏‡∑í‡∂Ω‡∂ö‡∂Ø‡∑ì ‡∂î‡∂∂‡∂ß ‡∂ë‡∑Ñ‡∑í ‡∂ú‡∑î‡∂´‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∂∑‡∑è‡∑Ä‡∂∫ ‡∂ú‡∑ê‡∂± ‡∑É‡∑ê‡∂ö ‡∂á‡∂≠‡∑í ‡∑Ä‡∑ö‡∂Ø?',
    q2Title: 'üõçÔ∏è ‡∑Ä‡∑í‡∑Å‡∑í‡∑Ç‡∑ä‡∂ß ‡∑Ä‡∂ß‡∑í‡∂±‡∑è‡∂ö‡∂∏ - ‡∑Ñ‡∑ú‡∂≥ ‡∂∏‡∑í‡∂Ω',
    q2Text: '‡∂∏‡∑ö ‡∂±‡∑í‡∑Ç‡∑ä‡∂¥‡∑è‡∂Ø‡∂±‡∂∫ ‡∂ö‡∑î‡∂∏‡∂± ‡∂∏‡∑í‡∂Ω‡∂ö‡∂Ø‡∑ì ‡∂î‡∂∂‡∂ß ‡∑É‡∑è‡∂∞‡∑è‡∂ª‡∂´ ‡∂∏‡∑í‡∂Ω‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É ‡∑É‡∑í‡∂≠‡∑ö‡∂Ø?',
    q3Title: 'üí∏ ‡∂∏‡∑í‡∂Ω ‡∂Ö‡∂∞‡∑í‡∂ö ‡∑Ä‡∑ô‡∂∏‡∑í‡∂±‡∑ä - ‡∂≠‡∑Ä‡∂∏‡∂≠‡∑ä ‡∑É‡∂Ω‡∂ö‡∑è ‡∂∂‡∂Ω‡∂∏‡∑í‡∂±‡∑ä',
    q3Text: '‡∂∏‡∑ö ‡∂±‡∑í‡∑Ç‡∑ä‡∂¥‡∑è‡∂Ø‡∂±‡∂∫ ‡∂ö‡∑î‡∂∏‡∂± ‡∂∏‡∑í‡∂Ω‡∂ö‡∂Ø‡∑ì ‡∂î‡∂∂‡∂ß ‡∂∏‡∑í‡∂Ω ‡∂Ö‡∂∞‡∑í‡∂ö ‡∂∫‡∑ê‡∂∫‡∑í ‡∑É‡∑í‡∂≠‡∑î‡∂´‡∂Ø ‡∂±‡∂∏‡∑î‡∂≠‡∑ä ‡∂≠‡∑Ä‡∂∏‡∂≠‡∑ä ‡∑É‡∂Ω‡∂ö‡∑è ‡∂∂‡∂Ω‡∂±‡∑Ä‡∑è‡∂Ø?',
    q4Title: 'üíÄ ‡∂â‡∂≠‡∑è ‡∂∏‡∑í‡∂Ω ‡∂Ö‡∂∞‡∑í‡∂ö - ‡∂±‡∑í‡∂ª‡∂¥‡∑ö‡∂ö‡∑ä‡∑Ç ‡∂±‡∑ë',
    q4Text: '‡∂∏‡∑ö ‡∂±‡∑í‡∑Ç‡∑ä‡∂¥‡∑è‡∂Ø‡∂±‡∂∫ ‡∂ö‡∑î‡∂∏‡∂± ‡∂∏‡∑í‡∂Ω‡∂ö‡∂Ø‡∑ì ‡∂î‡∂∂‡∂ß ‡∂∏‡∑í‡∂Ω‡∂Ø‡∑ì ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∂∫‡∑ê‡∂∫‡∑í ‡∑É‡∑í‡∂≠‡∑ö‡∂Ø?',
    calculateBtn: 'üéØ ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑É‡∑ä‡∂≠ ‡∂∏‡∑í‡∂Ω ‡∂ú‡∂´‡∂±‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±',
    resultsTitle: 'üìä ‡∂î‡∂∂‡∑ö ‡∂∏‡∑í‡∂Ω ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫',
    pricePointsTitle: 'üéØ ‡∂¥‡∑ä‚Äç‡∂ª‡∂∞‡∑è‡∂± ‡∂∏‡∑í‡∂Ω ‡∂Ω‡∂ö‡∑ä‡∑Ç‡∑ä‚Äç‡∂∫',
    oppLabel: '‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑É‡∑ä‡∂≠ ‡∂∏‡∑í‡∂Ω ‡∂Ω‡∂ö‡∑ä‡∑Ç‡∑ä‚Äç‡∂∫‡∂∫ (OPP):',
    ippLabel: '‡∂ã‡∂Ø‡∑è‡∑É‡∑ì‡∂± ‡∂∏‡∑í‡∂Ω ‡∂Ω‡∂ö‡∑ä‡∑Ç‡∑ä‚Äç‡∂∫‡∂∫ (IPP):',
    rangeTitle: 'üìè ‡∂¥‡∑í‡∑Ö‡∑í‡∂ú‡∂≠ ‡∑Ñ‡∑ê‡∂ö‡∑í ‡∂¥‡∂ª‡∑è‡∑É‡∂∫',
    minLabel: '‡∂Ö‡∑Ä‡∂∏ ‡∂∏‡∑í‡∂Ω:',
    maxLabel: '‡∂ã‡∂¥‡∂ª‡∑í‡∂∏ ‡∂∏‡∑í‡∂Ω:',
    recommendationsTitle: 'üí° ‡∂±‡∑í‡∂ª‡∑ä‡∂Ø‡∑ö‡∑Å',
    footerText: 'LetUs ‡∑Ä‡∑ä‚Äç‡∂∫‡∑è‡∂¥‡∑è‡∂ª ‡∂ã‡∂¥‡∂Ø‡∑ö‡∑Å‡∂±‡∂∫ ‡∑Ä‡∑í‡∑É‡∑í‡∂±‡∑ä ‡∂∂‡∂Ω‡∂ú‡∂±‡∑ä‡∑Ä‡∂± ‡∂Ω‡∂Ø‡∑ì',
    productNamePlaceholder: '‡∂±‡∑í‡∑Ç‡∑ä‡∂¥‡∑è‡∂Ø‡∂± ‡∂±‡∂∏ ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±',
    fillAllFields: '‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑É‡∑í‡∂∫‡∂Ω‡∑î ‡∂ö‡∑ä‡∑Ç‡∑ö‡∂≠‡∑ä‚Äç‡∂ª ‡∂¥‡∑î‡∂ª‡∑Ä‡∂±‡∑ä‡∂±'
  },
  ta: {
    mainTitle: 'üé¢ ‡Æµ‡Ææ‡Æ©‡Øç ‡Æµ‡ØÜ‡Æ∏‡Øç‡Æü‡ØÜ‡Æ©‡Øç‡Æü‡Ææ‡Æ∞‡Øç‡Æ™‡Øç ‡Æµ‡Æø‡Æ≤‡Øà ‡ÆÜ‡Æ∞‡Ææ‡ÆØ‡Øç‡Æö‡Øç‡Æö‡Æø',
    subtitle: '‡Æµ‡Ææ‡Æü‡Æø‡Æï‡Øç‡Æï‡Øà‡ÆØ‡Ææ‡Æ≥‡Æ∞‡Øç ‡Æé‡Æ£‡Øç‡Æ£‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÆ‡ØÇ‡Æ≤‡ÆÆ‡Øç ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ§‡ÆØ‡Ææ‡Æ∞‡Æø‡Æ™‡Øç‡Æ™‡ØÅ‡Æï‡Øç‡Æï‡Ææ‡Æ© ‡Æö‡Æ∞‡Æø‡ÆØ‡Ææ‡Æ© ‡Æµ‡Æø‡Æ≤‡Øà‡ÆØ‡Øà‡Æï‡Øç ‡Æï‡Æ£‡Øç‡Æü‡Æ±‡Æø‡ÆØ‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç',
    productTitle: 'üì¶ ‡Æ§‡ÆØ‡Ææ‡Æ∞‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡Æ§‡Æï‡Æµ‡Æ≤‡Øç',
    questionsTitle: 'üí° ‡Æ®‡Ææ‡Æ©‡Øç‡Æï‡ØÅ ‡ÆÆ‡Æ®‡Øç‡Æ§‡Æø‡Æ∞ ‡Æï‡Øá‡Æ≥‡Øç‡Æµ‡Æø‡Æï‡Æ≥‡Øç',
    q1Title: 'üò¨ ‡ÆÆ‡Æø‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ≤‡Æø‡Æµ‡Ææ‡Æ©‡Æ§‡ØÅ - ‡Æ§‡Æ∞ ‡Æö‡Æ®‡Øç‡Æ§‡Øá‡Æï‡Æô‡Øç‡Æï‡Æ≥‡Øç',
    q1Text: '‡Æé‡Æ®‡Øç‡Æ§ ‡Æµ‡Æø‡Æ≤‡Øà‡ÆØ‡Æø‡Æ≤‡Øç ‡Æá‡Æ®‡Øç‡Æ§ ‡Æ§‡ÆØ‡Ææ‡Æ∞‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡ÆÆ‡Æø‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ≤‡Æø‡Æµ‡Ææ‡Æ©‡Æ§‡Ææ‡Æï ‡Æï‡Æ∞‡ØÅ‡Æ§‡Æø ‡ÆÖ‡Æ§‡Æ©‡Øç ‡Æ§‡Æ∞‡Æ§‡Øç‡Æ§‡Øà ‡Æï‡Øá‡Æ≥‡Øç‡Æµ‡Æø‡Æï‡Øç‡Æï‡ØÅ‡Æ≥‡Øç‡Æ≥‡Ææ‡Æï‡Øç‡Æï‡ØÅ‡Æµ‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç?',
    q2Title: 'üõçÔ∏è ‡Æö‡Æø‡Æ±‡Æ®‡Øç‡Æ§ ‡ÆÆ‡Æ§‡Æø‡Æ™‡Øç‡Æ™‡ØÅ - ‡Æ™‡Øá‡Æ∞‡ÆÆ‡Øç ‡Æµ‡Æø‡Æ≤‡Øà',
    q2Text: '‡Æé‡Æ®‡Øç‡Æ§ ‡Æµ‡Æø‡Æ≤‡Øà‡ÆØ‡Æø‡Æ≤‡Øç ‡Æá‡Æ®‡Øç‡Æ§ ‡Æ§‡ÆØ‡Ææ‡Æ∞‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡Æ™‡Æ£‡Æ§‡Øç‡Æ§‡Æø‡Æ±‡Øç‡Æï‡ØÅ ‡Æ®‡Æ≤‡Øç‡Æ≤ ‡Æµ‡Ææ‡Æô‡Øç‡Æï‡Æ≤‡Ææ‡Æï ‡Æï‡Æ∞‡ØÅ‡Æ§‡ØÅ‡Æµ‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç?',
    q3Title: 'üí∏ ‡Æµ‡Æø‡Æ≤‡Øà ‡ÆÖ‡Æ§‡Æø‡Æï‡Æ∞‡Æø‡Æ§‡Øç‡Æ§‡ØÅ‡Æµ‡Æ∞‡ØÅ‡Æï‡Æø‡Æ±‡Æ§‡ØÅ - ‡ÆÜ‡Æ©‡Ææ‡Æ≤‡Øç ‡Æá‡Æ©‡Øç‡Æ©‡ØÅ‡ÆÆ‡Øç ‡Æï‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡Æø‡Æ≤‡Øç ‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç',
    q3Text: '‡Æé‡Æ®‡Øç‡Æ§ ‡Æµ‡Æø‡Æ≤‡Øà‡ÆØ‡Æø‡Æ≤‡Øç ‡Æá‡Æ®‡Øç‡Æ§ ‡Æ§‡ÆØ‡Ææ‡Æ∞‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡Æµ‡Æø‡Æ≤‡Øà ‡ÆÖ‡Æ§‡Æø‡Æï‡ÆÆ‡Ææ‡Æµ‡Æ§‡Ææ‡Æï ‡Æ®‡Æø‡Æ©‡Øà‡Æï‡Øç‡Æï ‡ÆÜ‡Æ∞‡ÆÆ‡Øç‡Æ™‡Æø‡Æ™‡Øç‡Æ™‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç, ‡ÆÜ‡Æ©‡Ææ‡Æ≤‡Øç ‡Æá‡Æ©‡Øç‡Æ©‡ØÅ‡ÆÆ‡Øç ‡Æ™‡Æ∞‡Æø‡Æö‡ØÄ‡Æ≤‡Æø‡Æï‡Øç‡Æï ‡Æ§‡Æï‡ØÅ‡Æ®‡Øç‡Æ§‡Æ§‡Ææ‡Æï ‡Æá‡Æ∞‡ØÅ‡Æï‡Øç‡Æï‡ØÅ‡ÆÆ‡Øç?',
    q4Title: 'üíÄ ‡ÆÆ‡Æø‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç ‡Æµ‡Æø‡Æ≤‡Øà ‡ÆÖ‡Æ§‡Æø‡Æï‡ÆÆ‡Øç - ‡Æï‡Æü‡ØÅ‡ÆÆ‡Øà‡ÆØ‡Ææ‡Æ© ‡Æá‡Æ≤‡Øç‡Æ≤‡Øà',
    q4Text: '‡Æé‡Æ®‡Øç‡Æ§ ‡Æµ‡Æø‡Æ≤‡Øà‡ÆØ‡Æø‡Æ≤‡Øç ‡Æá‡Æ®‡Øç‡Æ§ ‡Æ§‡ÆØ‡Ææ‡Æ∞‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡Æµ‡Ææ‡Æô‡Øç‡Æï ‡ÆÆ‡ØÅ‡Æü‡Æø‡ÆØ‡Ææ‡Æ§ ‡ÆÖ‡Æ≥‡Æµ‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æµ‡Æø‡Æ≤‡Øà ‡ÆÖ‡Æ§‡Æø‡Æï‡ÆÆ‡Ææ‡Æï ‡Æï‡Æ∞‡ØÅ‡Æ§‡ØÅ‡Æµ‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç?',
    calculateBtn: 'üéØ ‡Æâ‡Æï‡Æ®‡Øç‡Æ§ ‡Æµ‡Æø‡Æ≤‡Øà‡ÆØ‡Øà ‡Æï‡Æ£‡Æï‡Øç‡Æï‡Æø‡Æü‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç',
    resultsTitle: 'üìä ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æµ‡Æø‡Æ≤‡Øà ‡Æ™‡Æï‡ØÅ‡Æ™‡Øç‡Æ™‡Ææ‡ÆØ‡Øç‡Æµ‡ØÅ',
    pricePointsTitle: 'üéØ ‡ÆÆ‡ØÅ‡Æï‡Øç‡Æï‡Æø‡ÆØ ‡Æµ‡Æø‡Æ≤‡Øà ‡Æ™‡ØÅ‡Æ≥‡Øç‡Æ≥‡Æø‡Æï‡Æ≥‡Øç',
    oppLabel: '‡Æâ‡Æï‡Æ®‡Øç‡Æ§ ‡Æµ‡Æø‡Æ≤‡Øà ‡Æ™‡ØÅ‡Æ≥‡Øç‡Æ≥‡Æø (OPP):',
    ippLabel: '‡ÆÖ‡Æ≤‡Æü‡Øç‡Æö‡Æø‡ÆØ ‡Æµ‡Æø‡Æ≤‡Øà ‡Æ™‡ØÅ‡Æ≥‡Øç‡Æ≥‡Æø (IPP):',
    rangeTitle: 'üìè ‡Æè‡Æ±‡Øç‡Æ±‡ØÅ‡Æï‡Øç‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡Æ§‡Øç‡Æ§‡Æï‡Øç‡Æï ‡Æµ‡Æ∞‡ÆÆ‡Øç‡Æ™‡ØÅ',
    minLabel: '‡Æï‡ØÅ‡Æ±‡Øà‡Æ®‡Øç‡Æ§‡Æ™‡Æü‡Øç‡Æö ‡Æµ‡Æø‡Æ≤‡Øà:',
    maxLabel: '‡ÆÖ‡Æ§‡Æø‡Æï‡Æ™‡Æü‡Øç‡Æö ‡Æµ‡Æø‡Æ≤‡Øà:',
    recommendationsTitle: 'üí° ‡Æ™‡Æ∞‡Æø‡Æ®‡Øç‡Æ§‡ØÅ‡Æ∞‡Øà‡Æï‡Æ≥‡Øç',
    footerText: 'LetUs ‡Æµ‡Æ£‡Æø‡Æï ‡ÆÜ‡Æ≤‡Øã‡Æö‡Æ©‡Øà‡ÆØ‡Ææ‡Æ≤‡Øç ‡Æá‡ÆØ‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡ØÅ‡Æï‡Æø‡Æ±‡Æ§‡ØÅ',
    productNamePlaceholder: '‡Æ§‡ÆØ‡Ææ‡Æ∞‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡Æ™‡ØÜ‡ÆØ‡Æ∞‡Øà ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æø‡Æü‡Æµ‡ØÅ‡ÆÆ‡Øç',
    fillAllFields: '‡Æ§‡ÆØ‡Æµ‡ØÅ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡ØÅ ‡ÆÖ‡Æ©‡Øà‡Æ§‡Øç‡Æ§‡ØÅ ‡Æ™‡ØÅ‡Æ≤‡Æô‡Øç‡Æï‡Æ≥‡Øà‡ÆØ‡ØÅ‡ÆÆ‡Øç ‡Æ®‡Æø‡Æ∞‡Æ™‡Øç‡Æ™‡Æµ‡ØÅ‡ÆÆ‡Øç'
  }
};

const VanWestendorpPricingTool: React.FC = () => {
  const [language, setLanguage] = useState<Language>('en');
  const [currency, setCurrency] = useState<Currency>('LKR');
  const [productName, setProductName] = useState<string>('');
  const [pricingData, setPricingData] = useState<PricingData>({
    tooCheap: 0,
    bargain: 0,
    expensive: 0,
    tooExpensive: 0
  });
  const [results, setResults] = useState<Results | null>(null);
  const [showResults, setShowResults] = useState<boolean>(false);

  const t = translations[language];

  const handleLanguageChange = (lang: Language) => {
    setLanguage(lang);
  };

  const handlePricingDataChange = (field: keyof PricingData, value: string) => {
    setPricingData(prev => ({
      ...prev,
      [field]: parseFloat(value) || 0
    }));
  };

  const calculatePricing = () => {
    const { tooCheap, bargain, expensive, tooExpensive } = pricingData;

    if (tooCheap === 0 || bargain === 0 || expensive === 0 || tooExpensive === 0) {
      alert(t.fillAllFields);
      return;
    }

    // Van Westendorp calculations
    const opp = (tooCheap + tooExpensive) / 2; // Simplified OPP calculation
    const ipp = (bargain + expensive) / 2; // Simplified IPP calculation

    const calculatedResults: Results = {
      opp,
      ipp,
      minPrice: tooCheap,
      maxPrice: tooExpensive
    };

    setResults(calculatedResults);
    setShowResults(true);

    // Smooth scroll to results after state update
    setTimeout(() => {
      const resultsElement = document.getElementById('results');
      if (resultsElement) {
        resultsElement.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    }, 100);
  };

  const generateRecommendations = (): JSX.Element => {
    if (!results) return <div></div>;

    const { opp, minPrice } = results;

    if (language === 'si') {
      return (
        <div className="space-y-3">
          <p><strong>üéØ ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑É‡∑ä‡∂≠ ‡∂∏‡∑í‡∂Ω:</strong> {currency} {opp.toFixed(2)} - ‡∂∏‡∑ô‡∂∫ ‡∂î‡∂∂‡∑ö "Goldilocks" ‡∂ö‡∂Ω‡∑è‡∂¥‡∂∫‡∂∫‡∑í!</p>
          <p><strong>üìä ‡∂∏‡∑í‡∂Ω ‡∂¥‡∂ª‡∑è‡∑É‡∂∫:</strong> {currency} {minPrice.toFixed(2)} - {currency} {results.maxPrice.toFixed(2)}</p>
          <p><strong>üí° ‡∂±‡∑í‡∂ª‡∑ä‡∂Ø‡∑ö‡∑Å‡∂∫:</strong> ‡∂î‡∂∂‡∑ö ‡∂Ö‡∂±‡∑ä‡∂≠‡∑í‡∂∏ ‡∂∏‡∑í‡∂Ω {currency} {(opp * 0.9).toFixed(2)} - {currency} {(opp * 1.1).toFixed(2)} ‡∂Ö‡∂≠‡∂ª ‡∂≠‡∂∂‡∂±‡∑ä‡∂±.</p>
          <p><strong>‚ö†Ô∏è ‡∂Ö‡∑Ä‡∂∞‡∑è‡∂±‡∂∫:</strong> {currency} {minPrice.toFixed(2)} ‡∂ß ‡∑Ä‡∂©‡∑è ‡∂Ö‡∂©‡∑î ‡∂∏‡∑í‡∂Ω‡∂ö‡∑ä ‡∂ú‡∑î‡∂´‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∑É‡∑ê‡∂ö‡∂∫‡∂±‡∑ä ‡∂á‡∂≠‡∑í ‡∂ö‡∂ª‡∂∫‡∑í.</p>
        </div>
      );
    } else if (language === 'ta') {
      return (
        <div className="space-y-3">
          <p><strong>üéØ ‡Æâ‡Æï‡Æ®‡Øç‡Æ§ ‡Æµ‡Æø‡Æ≤‡Øà:</strong> {currency} {opp.toFixed(2)} - ‡Æá‡Æ§‡ØÅ ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç "‡Æï‡Øã‡Æ≤‡Øç‡Æü‡Æø‡Æ≤‡Ææ‡Æï‡Øç‡Æ∏‡Øç" ‡ÆÆ‡Æ£‡Øç‡Æü‡Æ≤‡ÆÆ‡Øç!</p>
          <p><strong>üìä ‡Æµ‡Æø‡Æ≤‡Øà ‡Æµ‡Æ∞‡ÆÆ‡Øç‡Æ™‡ØÅ:</strong> {currency} {minPrice.toFixed(2)} - {currency} {results.maxPrice.toFixed(2)}</p>
          <p><strong>üí° ‡Æ™‡Æ∞‡Æø‡Æ®‡Øç‡Æ§‡ØÅ‡Æ∞‡Øà:</strong> ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æá‡Æ±‡ØÅ‡Æ§‡Æø ‡Æµ‡Æø‡Æ≤‡Øà‡ÆØ‡Øà {currency} {(opp * 0.9).toFixed(2)} - {currency} {(opp * 1.1).toFixed(2)} ‡Æá‡Æü‡Øà‡ÆØ‡Æø‡Æ≤‡Øç ‡Æµ‡Øà‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.</p>
          <p><strong>‚ö†Ô∏è ‡Æé‡Æö‡Øç‡Æö‡Æ∞‡Æø‡Æï‡Øç‡Æï‡Øà:</strong> {currency} {minPrice.toFixed(2)} ‡Æµ‡Æø‡Æü ‡Æï‡ØÅ‡Æ±‡Øà‡Æµ‡Ææ‡Æ© ‡Æµ‡Æø‡Æ≤‡Øà ‡Æ§‡Æ∞ ‡Æö‡Æ®‡Øç‡Æ§‡Øá‡Æï‡Æô‡Øç‡Æï‡Æ≥‡Øà ‡Æè‡Æ±‡Øç‡Æ™‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ‡ÆÆ‡Øç.</p>
        </div>
      );
    } else {
      return (
        <div className="space-y-3">
          <p><strong>üéØ Optimal Price:</strong> {currency} {opp.toFixed(2)} - This is your "Goldilocks" zone!</p>
          <p><strong>üìä Price Range:</strong> {currency} {minPrice.toFixed(2)} - {currency} {results.maxPrice.toFixed(2)}</p>
          <p><strong>üí° Recommendation:</strong> Set your final price between {currency} {(opp * 0.9).toFixed(2)} - {currency} {(opp * 1.1).toFixed(2)}.</p>
          <p><strong>‚ö†Ô∏è Warning:</strong> Pricing below {currency} {minPrice.toFixed(2)} may create quality concerns.</p>
        </div>
      );
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-600 via-purple-600 to-purple-800" style={{ fontFamily: 'Inter, sans-serif' }}>
      <div className="container mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-4xl md:text-5xl font-bold text-white mb-4">
            {t.mainTitle}
          </h1>
          <p className="text-xl text-blue-100 mb-6">
            {t.subtitle}
          </p>
          
          {/* Language Selector */}
          <div className="flex justify-center space-x-4 mb-8">
            {(['en', 'si', 'ta'] as Language[]).map((lang) => (
              <button
                key={lang}
                onClick={() => handleLanguageChange(lang)}
                className={`px-4 py-2 rounded-lg transition-all duration-300 backdrop-blur-sm ${
                  language === lang
                    ? 'bg-green-600 bg-opacity-40 text-white'
                    : 'bg-green-600 bg-opacity-20 text-white hover:bg-opacity-30'
                }`}
              >
                {lang === 'en' ? 'English' : lang === 'si' ? '‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω' : '‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç'}
              </button>
            ))}
          </div>
        </div>

        {/* Main Card */}
        <div className="max-w-4xl mx-auto bg-white rounded-2xl shadow-2xl overflow-hidden">
          {/* Product Info Section */}
          <div className="bg-gradient-to-r from-blue-50 to-indigo-50 p-6 border-b">
            <h2 className="text-2xl font-semibold text-gray-800 mb-4">
              {t.productTitle}
            </h2>
            <div className="grid md:grid-cols-2 gap-4">
              <input
                type="text"
                value={productName}
                onChange={(e) => setProductName(e.target.value)}
                placeholder={t.productNamePlaceholder}
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
              <select
                value={currency}
                onChange={(e) => setCurrency(e.target.value as Currency)}
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="LKR">LKR (‡∂ª‡∑î‡∂¥‡∑í‡∂∫‡∂Ω‡∑ä)</option>
                <option value="USD">USD ($)</option>
                <option value="EUR">EUR (‚Ç¨)</option>
                <option value="INR">INR (‚Çπ)</option>
              </select>
            </div>
          </div>

          {/* Pricing Questions */}
          <div className="p-6">
            <h2 className="text-2xl font-semibold text-gray-800 mb-6">
              {t.questionsTitle}
            </h2>
            
            {/* Question 1 */}
            <div className="mb-8 p-6 bg-red-50 rounded-xl border-l-4 border-red-400">
              <h3 className="text-lg font-semibold text-red-800 mb-3">
                {t.q1Title}
              </h3>
              <p className="text-gray-700 mb-4">
                {t.q1Text}
              </p>
              <input
                type="number"
                value={pricingData.tooCheap || ''}
                onChange={(e) => handlePricingDataChange('tooCheap', e.target.value)}
                placeholder="0"
                className="w-full px-4 py-3 border border-red-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent text-lg font-semibold transition-all duration-300 focus:transform focus:-translate-y-1 focus:shadow-lg"
              />
            </div>

            {/* Question 2 */}
            <div className="mb-8 p-6 bg-green-50 rounded-xl border-l-4 border-green-400">
              <h3 className="text-lg font-semibold text-green-800 mb-3">
                {t.q2Title}
              </h3>
              <p className="text-gray-700 mb-4">
                {t.q2Text}
              </p>
              <input
                type="number"
                value={pricingData.bargain || ''}
                onChange={(e) => handlePricingDataChange('bargain', e.target.value)}
                placeholder="0"
                className="w-full px-4 py-3 border border-green-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-lg font-semibold transition-all duration-300 focus:transform focus:-translate-y-1 focus:shadow-lg"
              />
            </div>

            {/* Question 3 */}
            <div className="mb-8 p-6 bg-yellow-50 rounded-xl border-l-4 border-yellow-400">
              <h3 className="text-lg font-semibold text-yellow-800 mb-3">
                {t.q3Title}
              </h3>
              <p className="text-gray-700 mb-4">
                {t.q3Text}
              </p>
              <input
                type="number"
                value={pricingData.expensive || ''}
                onChange={(e) => handlePricingDataChange('expensive', e.target.value)}
                placeholder="0"
                className="w-full px-4 py-3 border border-yellow-300 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent text-lg font-semibold transition-all duration-300 focus:transform focus:-translate-y-1 focus:shadow-lg"
              />
            </div>

            {/* Question 4 */}
            <div className="mb-8 p-6 bg-purple-50 rounded-xl border-l-4 border-purple-400">
              <h3 className="text-lg font-semibold text-purple-800 mb-3">
                {t.q4Title}
              </h3>
              <p className="text-gray-700 mb-4">
                {t.q4Text}
              </p>
              <input
                type="number"
                value={pricingData.tooExpensive || ''}
                onChange={(e) => handlePricingDataChange('tooExpensive', e.target.value)}
                placeholder="0"
                className="w-full px-4 py-3 border border-purple-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent text-lg font-semibold transition-all duration-300 focus:transform focus:-translate-y-1 focus:shadow-lg"
              />
            </div>

            {/* Calculate Button */}
            <div className="text-center mb-8">
              <button
                onClick={calculatePricing}
                className="bg-gradient-to-r from-blue-600 to-purple-600 text-white px-8 py-4 rounded-xl text-lg font-semibold hover:from-blue-700 hover:to-purple-700 transform hover:scale-105 transition-all duration-300 shadow-lg"
              >
                {t.calculateBtn}
              </button>
            </div>

            {/* Results Section */}
            {showResults && results && (
              <div id="results">
                <h2 className="text-2xl font-semibold text-gray-800 mb-6">
                  {t.resultsTitle}
                </h2>
                
                <div className="grid md:grid-cols-2 gap-6 mb-8">
                  {/* Price Points */}
                  <div className="bg-gradient-to-br from-blue-50 to-indigo-100 p-6 rounded-xl">
                    <h3 className="text-lg font-semibold text-blue-800 mb-4">
                      {t.pricePointsTitle}
                    </h3>
                    <div className="space-y-3">
                      <div className="flex justify-between items-center">
                        <span className="text-gray-700">{t.oppLabel}</span>
                        <span className="font-bold text-blue-600">
                          {currency} {results.opp.toFixed(2)}
                        </span>
                      </div>
                      <div className="flex justify-between items-center">
                        <span className="text-gray-700">{t.ippLabel}</span>
                        <span className="font-bold text-green-600">
                          {currency} {results.ipp.toFixed(2)}
                        </span>
                      </div>
                    </div>
                  </div>

                  {/* Price Range */}
                  <div className="bg-gradient-to-br from-green-50 to-emerald-100 p-6 rounded-xl">
                    <h3 className="text-lg font-semibold text-green-800 mb-4">
                      {t.rangeTitle}
                    </h3>
                    <div className="space-y-3">
                      <div className="flex justify-between items-center">
                        <span className="text-gray-700">{t.minLabel}</span>
                        <span className="font-bold text-red-600">
                          {currency} {results.minPrice.toFixed(2)}
                        </span>
                      </div>
                      <div className="flex justify-between items-center">
                        <span className="text-gray-700">{t.maxLabel}</span>
                        <span className="font-bold text-purple-600">
                          {currency} {results.maxPrice.toFixed(2)}
                        </span>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Recommendations */}
                <div className="bg-gradient-to-r from-yellow-50 to-orange-50 p-6 rounded-xl">
                  <h3 className="text-lg font-semibold text-orange-800 mb-4">
                    {t.recommendationsTitle}
                  </h3>
                  <div className="text-gray-700">
                    {generateRecommendations()}
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>

        {/* Footer */}
        <div className="text-center mt-8 text-white">
          <p>{t.footerText}</p>
          <p className="text-blue-200 text-sm mt-2"> </p>
        </div>
      </div>
    </div>
  );
};

export default VanWestendorpPricingTool;